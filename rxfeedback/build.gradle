apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.dcendents.android-maven'

group = 'com.github.NoTests'

android {
	compileSdkVersion 27

	sourceSets {
		main.java.srcDirs += 'src/main/kotlin'
		test.java.srcDirs += 'src/test/kotlin'
	}

	defaultConfig {
		//noinspection MinSdkTooLow
		minSdkVersion 9
		//noinspection OldTargetApi
		targetSdkVersion 27
		versionCode 14 // increase this for every build
		versionName "0.1.14"
	}

	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
}

dependencies {
	implementation fileTree(include: ['*.jar'], dir: 'libs')
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:' + versions.kotlin
	implementation 'io.reactivex.rxjava2:rxjava:' + versions.rxjava2
	implementation 'io.reactivex.rxjava2:rxandroid:' + versions.rx_android
	implementation 'io.arrow-kt:arrow-optics:' + versions.arrow
	implementation 'com.github.NoTests.SharedSequence.kt:SharedSequence:' + versions.shared_sequence

	testImplementation project(':rxtestutils')
	testImplementation 'junit:junit:' + versions.junit
}

// build a jar with source files
task sourcesJar(type: Jar) {
	from android.sourceSets.main.java.srcDirs
	classifier = 'sources'
}

task javadoc(type: Javadoc) {
	failOnError false
	source = android.sourceSets.main.java.sourceFiles
	classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
	classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives sourcesJar
	archives javadocJar
}
